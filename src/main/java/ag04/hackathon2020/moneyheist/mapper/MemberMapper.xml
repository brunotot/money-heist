<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="ag04.hackathon2020.moneyheist.mapper.MemberMapper">
	
	<resultMap type="MemberSkill" id="memberSkillResult">
		<result property="level" column="level" />
        <result property="experience" column="experience"/>
       	<association property="skill" javaType="Skill">
	        <result property="id" column="skilLId"/>
	        <result property="name" column="skillName"/>
        </association>
	</resultMap>
    
	<resultMap type="Member" id="memberMap">
		<id property="id" column="id"/>
		<result property="sex" column="sex" />
		<result property="email" column="email" />
		<result property="name" column="name" />
		<result property="status" column="status" />
		<result property="active" column="active" />
		<result property="password" column="password" />
        <association property="role" javaType="Role">
	        <result property="id" column="roleId"/>
	        <result property="value" column="roleValue"/>
        </association>
        <association property="mainSkill" javaType="Skill">
	        <result property="id" column="skilLId"/>
	        <result property="name" column="skillName"/>
        </association>
  		<collection property="memberSkills" column="id" ofType="MemberSkill" select="findMemberSkillsByMemberId"/>
	</resultMap>

	<select id="findMemberById" resultType="Member" resultMap="memberMap">
		SELECT m.*, sk.id AS skillId, sk.name AS skillName, r.id AS roleId, r.value AS roleValue
		FROM member m
		INNER JOIN role r ON m.id_role = r.id
		LEFT JOIN skill sk ON m.id_main_skill = sk.id
		WHERE m.id = #{id}
	</select>

	<select id="findMemberByEmail" resultType="Member" resultMap="memberMap">
		SELECT m.*, sk.id AS skillId, sk.name AS skillName, r.id AS roleId, r.value AS roleValue
		FROM member m
		INNER JOIN role r ON m.id_role = r.id
		LEFT JOIN skill sk ON m.id_main_skill = sk.id
		WHERE m.email = #{email}
	</select>

	<select id="findMemberByName" resultType="Member" resultMap="memberMap">
		SELECT m.*, sk.id AS skillId, sk.name AS skillName, r.id AS roleId, r.value AS roleValue
		FROM member m
		INNER JOIN role r ON m.id_role = r.id
		LEFT JOIN skill sk ON m.id_main_skill = sk.id
		WHERE m.name = #{name}
	</select>
	
	<select id="findMemberSkillsByMemberId" resultType="MemberSkill" resultMap="memberSkillResult">
		SELECT ms.level AS level, s.id AS skillId, s.name AS skillName, ms.experience AS experience
		FROM member_skills ms
		INNER JOIN skill s ON ms.id_skill = s.id
		WHERE ms.id_member = #{id}
	</select>
	
	<insert id="insertMember" parameterType="Member">
		<selectKey order="AFTER" keyProperty="id" resultType="long">
	    	SELECT id FROM member WHERE email = #{email}
	  	</selectKey>
		INSERT INTO member (id_role, password, active, sex, name, email, status, id_main_skill)
		VALUES (#{role.id}, #{password}, #{active}, #{sex}, #{name}, #{email}, #{status}, #{mainSkill.id});
		<foreach collection="memberSkills" item="ms" index="index">
			INSERT INTO member_skills (id_member, id_skill, level)
			VALUES (SELECT id FROM member WHERE email = #{email}, #{ms.skill.id}, #{ms.level});
       </foreach>
	</insert>
	
	<update id="updateMember" parameterType="Member">
		UPDATE member
		SET id_role = #{role.id}, password = #{password}, active = #{active}, sex = #{sex}, name = #{name}, email = #{email}, status = #{status}, id_main_skill = #{mainSkill.id}
		WHERE id = #{id};
		<foreach collection="memberSkills" item="ms" index="index">
			DELETE FROM member_skills
			WHERE id_skill = #{ms.skill.id}
			AND id_member = #{id};
		</foreach>
		<foreach collection="memberSkills" item="ms" index="index">
			INSERT INTO member_skills (id_member, id_skill, level, experience)
			VALUES (#{id}, #{ms.skill.id}, #{ms.level}, #{ms.experience});
		</foreach>
		
		DELETE FROM member_skills
		WHERE id_member = #{id}
		AND id_skill NOT IN
		<foreach collection="memberSkills" item="ms" index="index" open="(" separator=","  close=")">
			#{ms.skill.id}
		</foreach>
	</update>
	
	<select id="findEligibleMembers" resultType="Member" parameterType="Heist" resultMap="memberMap">
		SELECT m.*, sk.id AS skillId, sk.name AS skillName, r.id AS roleId, r.value AS roleValue
		FROM member m
		INNER JOIN role r ON m.id_role = r.id
		LEFT JOIN skill sk ON m.id_main_skill = sk.id
		WHERE m.status IN ('AVAILABLE', 'RETIRED')
		AND m.id IN (
			SELECT ms.id_member
			FROM member_skills ms
			WHERE ms.id_skill IN (
				SELECT id_skill
				FROM heist_skills
				WHERE id_heist = #{id}
				AND ms.level >= level
			) 
		)
	</select>
	
</mapper>